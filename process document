Garage Management System
Project By,
Naga Satya Sai Phanirudh Medisetty
21bq1a5431@vvit.net
About Garage Management System:
The Garage Management System is a valuable tool for automotive repair facilities,
helping them deliver top-notch service, increase operational efficiency, and build lasting
customer relationships. With its user-friendly interface and powerful features, GMS
empowers garages to thrive in a competitive market while ensuring a seamless and
satisfying experience for both customers and staff.
Garage Management System Setup Guide
1. Creating a Salesforce Developer Account:
1. Visit Salesforce Developer Signup.
2. Fill out the signup form:
○. First Name & Last Name
○. Email
○. Role: Developer
○. Company: College Name
○. Country: India
○. Postal Code: Your Pin Code
○. Username: (e.g., username@organization.com)
2. Account Activation
1. Check your email inbox for a verification email from Salesforce.
2. Click Verify Account.
3. Set up your password and security question, then click Change Password.
3. Creating Salesforce Objects
3.1 Customer Details Object
1. Go to Object Manager > Create > Custom Object.
2. Configure the following:
○. Label Name: Customer Details
○. Plural Label Name: Customer Details
○. Record Name: Customer Name (Text)
3. Enable Allow Reports, Track Field History, and Allow Search.
4. Click Save.
3.2 Appointment Object
1. Go to Object Manager > Create > Custom Object.
2. Configure the following:
○. Label Name: Appointment
○. Plural Label Name: Appointments
○. Record Name: Appointment Name (Auto Number)
○. Display Format: app-{000}, Starting Number: 1
3. Enable Allow Reports, Track Field History, and Allow Search.
4. Click Save.
3.3 Service Records Object
1. Go to Object Manager > Create > Custom Object.
2. Configure the following:
○. Label Name: Service Records
○. Plural Label Name: Service Records
○. Record Name: Service Records Name (Auto Number)
○. Display Format: ser-{000}, Starting Number: 1
3. Enable Allow Reports, Track Field History, and Allow Search.
4. Click Save.
3.4 Billing Details and Feedback Object
1. Go to Object Manager > Create > Custom Object.
2. Configure the following:
○. Label Name: Billing Details and Feedback
○. Plural Label Name: Billing Details and Feedback
○. Record Name: Billing Details and Feedback Name (Auto Number)
○. Display Format: bill-{000}, Starting Number: 1
3. Enable Allow Reports, Track Field History, and Allow Search.
4. Click Save.
4. Creating Custom Tabs
1. Go to Setup > Tabs > New (under Custom Object Tabs).
2. Select the object (e.g., Customer Details), choose a tab style, and click Next.
3. Configure profile visibility as needed and click Next.
4. Click Save.
Repeat for remaining objects (Appointments, Service Records, Billing Details and
Feedback).
5. Creating a Lightning App
1. Go to Setup > App Manager > New Lightning App.
2. Configure the app:
○. App Name: Garage Management Application
○. Leave other settings as default and click Next.
3. Add navigation items (Customer Details, Appointments, Service Records, Billing
Details
and Feedback, Reports, Dashboards) and click Next.
4. Assign the System Administrator profile to the app and click Save & Finish.
6. Creating Fields for Objects
6.1 Customer Details Object
1. Go to Setup > Object Manager > Customer Details > Fields & Relationships > New.
2. Create the following fields:
○. Phone Number (Phone)
○. Gmail (Email)
6.2 Appointment Object
1. Create a Lookup Relationship to Customer Details.
2. Create the following fields:
○. Maintenance Service (Checkbox)
○. Repairs (Checkbox)
○. Replacement Parts (Checkbox)
○. Appointment Date (Date)
○. Service Amount (Currency)
○. Vehicle Number Plate (Text)
6.3 Service Records Object
1. Create a Lookup Relationship to Appointment.
2. Create the following fields:
○. Quality Check Status (Checkbox)
○. Service Status (Picklist: Started, Completed)
○. Service Date (Formula: Created Date)
6.4 Billing Details and Feedback Object
1. Create a Lookup Relationship to Service Records.
2. Create the following fields:
○. Payment Paid (Currency)
○. Rating for Service (Text)
○. Payment Status (Picklist: Pending, Completed)
7. Creating Validation Rules
7.1 Appointment Object
● Rule Name: Vehicle
● Formula: NOT(REGEX(Vehicle_number_plate__c, "[A-Z]{2}[0-9]{2}[A-Z]{2}[0-9]{4}"))
● Error Message: Please enter a valid number.
7.2 Service Records Object
● Rule Name: service_status_note
● Formula: NOT(ISPICKVAL(Service_Status__c, "Completed"))
● Error Message: Still it is pending.
7.3 Billing Details and Feedback Object
● Rule Name: rating_should_be_less_than_5
● Formula: NOT(REGEX(Rating_for_service__c, "[1-5]{1}"))
● Error Message: Rating should be from 1 to 5.
8. Creating a Flow
8.1 Create Flow for Billing Details and Feedback
1. Go to Setup > Flow > New Flow.
2. Select Record-triggered flow.
3. Configure the flow to trigger when a record is created or updated.
4. Add an Update Records element:
○. Label: Amount Update
○. Filter Condition: Payment Status = Completed
○. Field Values: Set Payment Paid to Service_Amount__c.
5. Add an Email Alert element:
○. Label: Email Alert
○. Recipient:
{!$Record.Service_records__r.Appointment__r.Customer_Name__r.Gmail__c}
○. Subject: Thank You for Your Payment - Garage Management
○. Body: Use a text template to include customer details and payment amount.
6. Save and activate the flow.
9. Apex Code for Amount Distribution
9.1 Create an Apex Handler Class
Code:
public class AmountDistributionHandler {
public static void amountDist(list<Appointment__c> listApp) {
for (Appointment__c app : listApp) {
if (app.Maintenance_service__c && app.Repairs__c && app.Replacement_Parts__c) {
app.Service_Amount__c = 10000;
} else if (app.Maintenance_service__c && app.Repairs__c) {
app.Service_Amount__c = 5000;
} else if (app.Maintenance_service__c && app.Replacement_Parts__c) {
app.Service_Amount__c = 8000;
} else if (app.Repairs__c && app.Replacement_Parts__c) {
app.Service_Amount__c = 7000;
} else if (app.Maintenance_service__c) {
app.Service_Amount__c = 2000;
} else if (app.Repairs__c) {
app.Service_Amount__c = 3000;
} else if (app.Replacement_Parts__c) {
app.Service_Amount__c = 5000;
}
}
}
}
9.2 Create a Trigger for Appointment
Code:
trigger AmountDistribution on Appointment__c (before insert, before update) {
if (trigger.isBefore && (trigger.isInsert || trigger.isUpdate)) {
AmountDistributionHandler.amountDist(trigger.new);
}
}
10. Creating Reports
10.1 Create a Report Folder
1. Go to App Launcher > Reports > New Folder.
2. Name the folder Garage Management Folder and click Save.
10.2 Create a Report Type
1. Go to Setup > Report Types > New Custom Report Type.
2. Select Customer Details as the primary object.
3. Add Appointment, Service Records, and Billing Details and Feedback as related
objects.
10.3 Create Reports
1. Go to Reports > New Report.
2. Use the custom report type to create and customize your reports.
10. Creating Dashboards
10.1 Create a Dashboard Folder
1. Click on the app launcher and search for dashboard.
2. Click on dashboard tab.
3. Click new folder, give the folder label as “ Service Rating dashboard”.
4. Folder unique name will be auto populated.
5. Click save.
6. Share the Dashboard Folder with the Role "Manager".
10.2 Create Dashboard
1. Go to the app >>  click on the Dashboards tabs.
2. Give a Name and select the folder that created, and click on create.
3. Select add component.
4. Select a Report and click on select.
5. Select the Line Chart. Change the theme.
6. Click Add then click on Save and then click on Done.
7. Preview is shown below.
8. After that Click on Subcribe on top right.
9. Set the Frequency as “ weekly ”.
10.Set a day as monday.
11.And Click on save.
12.The Dashboard is created.
Garage Management System Overview
Customer Details
The Customer Details tab shows the list of Customers and their details.
Appointments
Shows the list of appointments and the appointment details.
Service Records
Shows the details of every Service record of the customer.
Billing Details and Feedback
Contains the overall summary of service, amount paid by the customer, payment status
and Rating for the service.
Reports
Reports give you access to your Salesforce data. You can examine your Salesforce data
in almost infinite combinations, display it in easy-to-understand formats, and share the
resulting insights with others. Before building, reading, and sharing reports, review these
reporting basics.
Types of Reports in Salesforce
1. Tabular
2. Summary
3. Matrix
4. Joined Reports
Dashboard
Dashboards help you visually understand changing business conditions so you can
make decisions based on the real-time data you’ve gathered with reeports. Use
dashboards to help users identify trends, sort out quantities, and measure the impact of
their activities. Before building, reading, and sharing dashboards, review these
dashboard basics
